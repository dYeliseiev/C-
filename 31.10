–ù–æ–º–µ—Ä 1
–ó–∞–¥–∞—Ç–∏ –æ–¥–Ω–æ–º—ñ—Ä–Ω–∏–π –º–∞—Å–∏–≤ —Ü—ñ–ª–∏—Ö —á–∏—Å–µ–ª ùëö = 12. –£–ø–æ—Ä—è–¥–∫—É–≤–∞—Ç–∏ –π–æ–≥–æ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è–º —Ç–∞ —Å–ø–∞–¥–∞–Ω–Ω—è–º. 
#include <iostream>
#include <cstdlib>
#include <algorithm>

using namespace std;

int main(void) {
	const int lenght = 12;//–≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π —Ä–æ–∑–º—ñ—Ä –º–∞—Å–∏–≤—É
	int m[lenght];

	for (int  i = 0; i < lenght; i++)
	{
		m[i] = int(rand() % 70);//—Ä–∞–Ω–¥–æ–º–Ω—ñ —á–∏—Å–ª–∞ –Ω–µ –±—ñ–ª—å—à—ñ 70
	}

	cout << "Arr before :\n";

	for (int i = 0; i < 12; i++)//–≤–∏–≤–µ–¥–µ–Ω–Ω—è 12 –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—Å–∏–≤—É, –Ω–µ –±—ñ–ª—å—à–µ –Ω—ñ–∂ 12
	{
		cout << m[i] << " ";
	}

	sort(m, m + lenght);//—Å–æ—Ä—Ç—É–≤–∞—Ç–∏

	cout << "\nArr after  :\n";

for (int i = 0; i < 12; i++)
	{
		cout << m[i] << " ";//–≤–∏–≤–µ–¥–µ–Ω–Ω—è –ø–æ—Å–æ—Ä—Ç–æ–≤–∞–Ω–æ–≥–æ –º–∞—Å–∏–≤—É
	}

	return 0;
}




–ù–æ–º–µ—Ä 2
–ù–∞–ø–∏—à—ñ—Ç—å –ø—Ä–æ–≥—Ä–∞–º—É, —â–æ –∑–∞–º—ñ–Ω—è—î –Ω—É–ª—è–º–∏ –≤—Å—ñ –≤—ñ–¥‚Äô—î–º–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –∑–∞–¥–∞–Ω–æ–≥–æ –Ω–µ –ø–æ—Ä–æ–∂–Ω—å–æ–≥–æ –º–∞—Å–∏–≤—É, —â–æ –ø–µ—Ä–µ–¥—É—é—Ç—å –π–æ–≥–æ –ø–µ—Ä—à–æ–º—É –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–º—É –µ–ª–µ–º–µ–Ω—Ç—É. 

#include <iostream>
#include <cstdlib>
#include <algorithm>

using namespace std;

int main(void) {
	const int lenght = 12;
	int m[lenght];

	for (int  i = 0; i < lenght; i++)
	{
		m[i] = int(rand() % 100) + -(rand() % 100);
	}

	cout << "Arr random :\n";//–ú–∞—Å–∏–≤, –Ω–∞–ø–æ–≤–Ω–µ–Ω–∏–π –¥–æ–≤—ñ–ª—å–Ω–∏–º–∏(–≤—ñ–¥ -100 –¥–æ 100) —á–∏—Å–ª–∞–º–∏

	for (int i = 0; i < lenght; i++)
	{
		cout << m[i] << " ";
	}

	for (int i = 0; i < lenght; i++)
	{
		if (m[i] < 0) 
		{
			m[i] = 0;
		}
	}

	cout << "\nArr after change : \n";//–í—ñ–¥'—î–º–Ω—ñ —á–∏—Å–ª–∞ –∑–∞–º—ñ–Ω–µ–Ω—ñ –Ω–∞ 0

	for (int i = 0; i < lenght; i++)
	{
		cout << m[i] << " ";
	}

	return 0;
}

